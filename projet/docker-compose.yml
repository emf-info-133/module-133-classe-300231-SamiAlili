version: '3.8'

services:

  api-gw:
    container_name: api-gateway
    build:
      context: ./apiGateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - api-network
    environment:
      REST1_SERVICE_URL: http://rest1:8081/rest1/
      REST2_SERVICE_URL: http://rest2:8082/rest2/

  rest1:
    container_name: rest1-service
    build:
      context: ./serviceRest1
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      DATABASE_URL: jdbc:mysql://db-rest1:3306/133-rest1-db
      REST2_SERVICE_URL: http://rest2:8082/rest2/
    depends_on:
      - db-rest1
    networks:
      - api-network

  rest2:
    container_name: rest2-service
    build:
      context: ./serviceRest2
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      DATABASE_URL: jdbc:mysql://db-rest2:3306/133-rest2-db
      REST1_SERVICE_URL: http://rest1:8081/rest1/
    depends_on:
      - db-rest2
    networks:
      - api-network

  db-rest1:
    image: mysql:8
    container_name: db-rest1
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: emf123
      MYSQL_DATABASE: 133-rest1-db
    ports:
      - "3307:3306"
    networks:
      - api-network
    volumes:
      - rest1db_data:/var/lib/mysql

  db-rest2:
    image: mysql:8
    container_name: db-rest2
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: emf123
      MYSQL_DATABASE: 133-rest2-db
    ports:
      - "3308:3306"
    networks:
      - api-network
    volumes:
      - rest2db_data:/var/lib/mysql

networks:
  api-network:
    driver: bridge

volumes:
  rest1db_data:
  rest2db_data:
